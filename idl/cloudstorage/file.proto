syntax="proto3";

package file;

option go_package = "/file";

message FileMetaData {
  string name = 1;
  int64 size = 2;
  string hash = 3;
  string path = 4;
  string content_type = 5;
  int32 user_id = 6;
  int64 folder_id = 7;
}

message File {
  int32 id = 1;
  string name = 2;
  int64 folder_id = 3;
  int32 user_id = 4;
  int64 size = 6;
  string type = 7;
  string utime = 8;
}

message Folder {
  int64 id = 1;
  string name = 2;
  int64 parent_id = 3;
  int32 user_id = 4;
  string path = 5;
  string utime = 6;
}

message UploadRequest {
  FileMetaData metadata = 1;
  bytes data = 2;
}

message UploadResponse {
  int32 id = 1;
}

message CreateFileStoreRequest {
  int32 user_id = 1;
}

message CreateFileStoreResponse {
  int32 id = 1;
}

message CreateFolderRequest {
  string name = 1;
  int64 parent_id = 2;
  int32 user_id = 3;
}

message CreateFolderResponse {
  Folder folder = 1;
}

message ListFolderRequest {
  int64 folder_id = 1;
  int32 user_id = 2;
}

message ListFolderResponse {
  repeated Folder folders = 1;
  repeated File files = 2;
}

message GetFileRequest {
  int32 file_id = 1;
  int32 user_id = 2;
}

message GetFileResponse {
  File file = 1;
}

message DownloadRequest {
  int32 file_id = 1;
  int32 user_id = 2;
}

message DownloadResponse {
  bytes data = 1;
}

message DownloadStreamResponse {
  bytes data = 1;
}

message MoveFolderRequest {
  int32 user_id = 1;
  int64 folder_id = 2;
  int64 to_folder_id = 3;
  string folder_name = 4;
}

message MoveFolderResponse {

}

message MoveFileRequest {
  int32 user_id = 1;
  int64 file_id = 2;
  int64 to_folder_id = 4;
}

message MoveFileResponse {

}

message DeleteFileRequest {
  int64 file_id = 1;
  int32 user_id = 2;
}

message DeleteFileResponse {

}

message DeleteFolderRequest {
  int64 folder_id = 1;
  int32 user_id = 2;
}

message DeleteFolderResponse {

}

message SearchRequest {
  int32 user_id = 1;
  string query = 2;
  int32 page = 3;
  int32 size = 4;
}

message SearchResponse {
  repeated File files = 1;
  repeated Folder folders = 2;
}

message PreviewRequest {
  int32 file_id = 1;
  int32 user_id = 2;
}

message PreviewResponse {
  string preview_url = 1;
  string content_type = 2;
  PreviewType type = 3;
}

enum PreviewType {
  UNKNOWN = 0;
  IMAGE = 1;
  PDF = 2;
  DOCUMENT = 3;
  TEXT = 4;
}

message InitMultipartUploadRequest {
  file.FileMetaData metadata = 1;
}

message InitMultipartUploadResponse {
  string upload_id = 1;
}

message UploadPartRequest {
  string upload_id = 1;
  string object_name = 2;
  int32 part_number = 3;
  bytes data = 4;
}

message UploadPartResponse {
  string etag = 1;
}

message CompleteMultipartUploadRequest {
  string upload_id = 1;
  repeated PartInfo parts = 2;
  string object_name = 3;
  int32 user_id = 4;
}

message PartInfo {
  int32 part_number = 1;
  string etag = 2;
}

message DownloadTaskRequest {
  int32 user_id = 1;
  repeated FileDownloadInfo files = 2;
  string folder_name = 3;
}

message FileDownloadInfo {
  int64 file_id = 1;
  int32 order_num = 2;
  string path = 3;
}

message DownloadTaskResponse {
  string task_id = 1;
}

message GetDownloadTaskRequest {
  string task_id = 1;
  int32 user_id = 2;
}

message GetDownloadTaskResponse {
  string task_id = 1;
  string  status = 2;        // pending processing completed failed
  string folder_name = 3;
  int64 total_size = 4;
  int64 progress = 5;
  repeated FileProgress files = 6;
}

message FileProgress {
  int64 file_id = 1;
  string name = 2;
  string path = 3;
  int64 size = 4;
  string  status = 5;      // pending processing completed failed
  int64 downloaded = 6;    // 已下载大小
}

message ResumeDownloadRequest {
  string task_id = 1;     // 原任务ID
  int32 user_id = 2;      // 用户ID
  repeated int64 file_ids = 3;  // 需要继续下载的文件ID列表
}

message ResumeDownloadResponse {
  string new_task_id = 1;  // 新的任务ID
}

service FileService {
  rpc Upload(UploadRequest) returns (UploadResponse);
  rpc CreateFileStore(CreateFileStoreRequest) returns (CreateFileStoreResponse);
  rpc CreateFolder(CreateFolderRequest) returns (CreateFolderResponse);
  rpc ListFolder(ListFolderRequest) returns (ListFolderResponse);
  rpc GetFile(GetFileRequest) returns (GetFileResponse);
  rpc Download(DownloadRequest) returns (DownloadResponse);
  rpc DownloadStream(DownloadRequest) returns (stream DownloadStreamResponse);
  rpc MoveFolder(MoveFolderRequest) returns (MoveFolderResponse);
  rpc MoveFile(MoveFileRequest) returns (MoveFileResponse);
  rpc DeleteFile(DeleteFileRequest) returns (DeleteFileResponse);
  rpc DeleteFolder(DeleteFolderRequest) returns (DeleteFolderResponse);
  rpc Search(SearchRequest) returns (SearchResponse);
  rpc Preview(PreviewRequest) returns (PreviewResponse);
  rpc InitMultipartUpload(InitMultipartUploadRequest) returns (InitMultipartUploadResponse);
  rpc UploadPart(UploadPartRequest) returns (UploadPartResponse);
  rpc CompleteMultipartUpload(CompleteMultipartUploadRequest) returns (UploadResponse);
  rpc DownloadTask(DownloadTaskRequest) returns (DownloadTaskResponse);
  rpc GetDownloadTask(GetDownloadTaskRequest) returns (GetDownloadTaskResponse);
  rpc ResumeDownload(ResumeDownloadRequest) returns (ResumeDownloadResponse);
}