// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: idl/cloudstorage/file.proto

package file

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PreviewType int32

const (
	PreviewType_UNKNOWN  PreviewType = 0
	PreviewType_IMAGE    PreviewType = 1
	PreviewType_PDF      PreviewType = 2
	PreviewType_DOCUMENT PreviewType = 3
	PreviewType_TEXT     PreviewType = 4
)

// Enum value maps for PreviewType.
var (
	PreviewType_name = map[int32]string{
		0: "UNKNOWN",
		1: "IMAGE",
		2: "PDF",
		3: "DOCUMENT",
		4: "TEXT",
	}
	PreviewType_value = map[string]int32{
		"UNKNOWN":  0,
		"IMAGE":    1,
		"PDF":      2,
		"DOCUMENT": 3,
		"TEXT":     4,
	}
)

func (x PreviewType) Enum() *PreviewType {
	p := new(PreviewType)
	*p = x
	return p
}

func (x PreviewType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PreviewType) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_cloudstorage_file_proto_enumTypes[0].Descriptor()
}

func (PreviewType) Type() protoreflect.EnumType {
	return &file_idl_cloudstorage_file_proto_enumTypes[0]
}

func (x PreviewType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PreviewType.Descriptor instead.
func (PreviewType) EnumDescriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{0}
}

type ChangeOperation int32

const (
	ChangeOperation_INSERT ChangeOperation = 0 // 插入内容
	ChangeOperation_DELETE ChangeOperation = 1 // 删除内容
	ChangeOperation_UPDATE ChangeOperation = 2 // 更新内容
)

// Enum value maps for ChangeOperation.
var (
	ChangeOperation_name = map[int32]string{
		0: "INSERT",
		1: "DELETE",
		2: "UPDATE",
	}
	ChangeOperation_value = map[string]int32{
		"INSERT": 0,
		"DELETE": 1,
		"UPDATE": 2,
	}
)

func (x ChangeOperation) Enum() *ChangeOperation {
	p := new(ChangeOperation)
	*p = x
	return p
}

func (x ChangeOperation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChangeOperation) Descriptor() protoreflect.EnumDescriptor {
	return file_idl_cloudstorage_file_proto_enumTypes[1].Descriptor()
}

func (ChangeOperation) Type() protoreflect.EnumType {
	return &file_idl_cloudstorage_file_proto_enumTypes[1]
}

func (x ChangeOperation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChangeOperation.Descriptor instead.
func (ChangeOperation) EnumDescriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{1}
}

type FileMetaData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Hash          string                 `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	Path          string                 `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	ContentType   string                 `protobuf:"bytes,5,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	UserId        int32                  `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FolderId      int64                  `protobuf:"varint,7,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileMetaData) Reset() {
	*x = FileMetaData{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMetaData) ProtoMessage() {}

func (x *FileMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMetaData.ProtoReflect.Descriptor instead.
func (*FileMetaData) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{0}
}

func (x *FileMetaData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileMetaData) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileMetaData) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *FileMetaData) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileMetaData) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *FileMetaData) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FileMetaData) GetFolderId() int64 {
	if x != nil {
		return x.FolderId
	}
	return 0
}

type File struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FolderId       int64                  `protobuf:"varint,3,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	UserId         int32                  `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Size           int64                  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Type           string                 `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	Utime          string                 `protobuf:"bytes,8,opt,name=utime,proto3" json:"utime,omitempty"`
	Version        int32                  `protobuf:"varint,9,opt,name=version,proto3" json:"version,omitempty"`                                       // 文件版本号
	DeviceId       string                 `protobuf:"bytes,10,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`                     // 设备ID
	LastModifiedBy string                 `protobuf:"bytes,11,opt,name=last_modified_by,json=lastModifiedBy,proto3" json:"last_modified_by,omitempty"` // 最后修改者
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *File) Reset() {
	*x = File{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *File) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*File) ProtoMessage() {}

func (x *File) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use File.ProtoReflect.Descriptor instead.
func (*File) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{1}
}

func (x *File) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *File) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *File) GetFolderId() int64 {
	if x != nil {
		return x.FolderId
	}
	return 0
}

func (x *File) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *File) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *File) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *File) GetUtime() string {
	if x != nil {
		return x.Utime
	}
	return ""
}

func (x *File) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *File) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *File) GetLastModifiedBy() string {
	if x != nil {
		return x.LastModifiedBy
	}
	return ""
}

type Folder struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ParentId      int64                  `protobuf:"varint,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	UserId        int32                  `protobuf:"varint,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Path          string                 `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	Utime         string                 `protobuf:"bytes,6,opt,name=utime,proto3" json:"utime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Folder) Reset() {
	*x = Folder{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Folder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Folder) ProtoMessage() {}

func (x *Folder) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Folder.ProtoReflect.Descriptor instead.
func (*Folder) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{2}
}

func (x *Folder) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Folder) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Folder) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *Folder) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Folder) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Folder) GetUtime() string {
	if x != nil {
		return x.Utime
	}
	return ""
}

type FileStore struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Capacity      int64                  `protobuf:"varint,2,opt,name=capacity,proto3" json:"capacity,omitempty"`
	CurrentSize   int64                  `protobuf:"varint,3,opt,name=current_size,json=currentSize,proto3" json:"current_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileStore) Reset() {
	*x = FileStore{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileStore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileStore) ProtoMessage() {}

func (x *FileStore) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileStore.ProtoReflect.Descriptor instead.
func (*FileStore) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{3}
}

func (x *FileStore) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FileStore) GetCapacity() int64 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *FileStore) GetCurrentSize() int64 {
	if x != nil {
		return x.CurrentSize
	}
	return 0
}

type UploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metadata      *FileMetaData          `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{4}
}

func (x *UploadRequest) GetMetadata() *FileMetaData {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *UploadRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadResponse) Reset() {
	*x = UploadResponse{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResponse) ProtoMessage() {}

func (x *UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResponse.ProtoReflect.Descriptor instead.
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{5}
}

func (x *UploadResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateFileStoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFileStoreRequest) Reset() {
	*x = CreateFileStoreRequest{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFileStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileStoreRequest) ProtoMessage() {}

func (x *CreateFileStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileStoreRequest.ProtoReflect.Descriptor instead.
func (*CreateFileStoreRequest) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{6}
}

func (x *CreateFileStoreRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CreateFileStoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFileStoreResponse) Reset() {
	*x = CreateFileStoreResponse{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFileStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFileStoreResponse) ProtoMessage() {}

func (x *CreateFileStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFileStoreResponse.ProtoReflect.Descriptor instead.
func (*CreateFileStoreResponse) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{7}
}

func (x *CreateFileStoreResponse) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type CreateFolderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ParentId      int64                  `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	UserId        int32                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFolderRequest) Reset() {
	*x = CreateFolderRequest{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFolderRequest) ProtoMessage() {}

func (x *CreateFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFolderRequest.ProtoReflect.Descriptor instead.
func (*CreateFolderRequest) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{8}
}

func (x *CreateFolderRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateFolderRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *CreateFolderRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type CreateFolderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Folder        *Folder                `protobuf:"bytes,1,opt,name=folder,proto3" json:"folder,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateFolderResponse) Reset() {
	*x = CreateFolderResponse{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateFolderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateFolderResponse) ProtoMessage() {}

func (x *CreateFolderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateFolderResponse.ProtoReflect.Descriptor instead.
func (*CreateFolderResponse) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{9}
}

func (x *CreateFolderResponse) GetFolder() *Folder {
	if x != nil {
		return x.Folder
	}
	return nil
}

type ListFolderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FolderId      int64                  `protobuf:"varint,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFolderRequest) Reset() {
	*x = ListFolderRequest{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFolderRequest) ProtoMessage() {}

func (x *ListFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFolderRequest.ProtoReflect.Descriptor instead.
func (*ListFolderRequest) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{10}
}

func (x *ListFolderRequest) GetFolderId() int64 {
	if x != nil {
		return x.FolderId
	}
	return 0
}

func (x *ListFolderRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ListFolderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Folders       []*Folder              `protobuf:"bytes,1,rep,name=folders,proto3" json:"folders,omitempty"`
	Files         []*File                `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFolderResponse) Reset() {
	*x = ListFolderResponse{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFolderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFolderResponse) ProtoMessage() {}

func (x *ListFolderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFolderResponse.ProtoReflect.Descriptor instead.
func (*ListFolderResponse) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{11}
}

func (x *ListFolderResponse) GetFolders() []*Folder {
	if x != nil {
		return x.Folders
	}
	return nil
}

func (x *ListFolderResponse) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

type GetFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        int64                  `protobuf:"varint,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileRequest) Reset() {
	*x = GetFileRequest{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileRequest) ProtoMessage() {}

func (x *GetFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileRequest.ProtoReflect.Descriptor instead.
func (*GetFileRequest) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{12}
}

func (x *GetFileRequest) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *GetFileRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	File          *File                  `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetFileResponse) Reset() {
	*x = GetFileResponse{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileResponse) ProtoMessage() {}

func (x *GetFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileResponse.ProtoReflect.Descriptor instead.
func (*GetFileResponse) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{13}
}

func (x *GetFileResponse) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

type DownloadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        int64                  `protobuf:"varint,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadRequest) Reset() {
	*x = DownloadRequest{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadRequest) ProtoMessage() {}

func (x *DownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadRequest.ProtoReflect.Descriptor instead.
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{14}
}

func (x *DownloadRequest) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *DownloadRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DownloadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadResponse) Reset() {
	*x = DownloadResponse{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadResponse) ProtoMessage() {}

func (x *DownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadResponse.ProtoReflect.Descriptor instead.
func (*DownloadResponse) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{15}
}

func (x *DownloadResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type DownloadStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadStreamResponse) Reset() {
	*x = DownloadStreamResponse{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadStreamResponse) ProtoMessage() {}

func (x *DownloadStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadStreamResponse.ProtoReflect.Descriptor instead.
func (*DownloadStreamResponse) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{16}
}

func (x *DownloadStreamResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type MoveFolderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FolderId      int64                  `protobuf:"varint,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	ToFolderId    int64                  `protobuf:"varint,3,opt,name=to_folder_id,json=toFolderId,proto3" json:"to_folder_id,omitempty"`
	FolderName    string                 `protobuf:"bytes,4,opt,name=folder_name,json=folderName,proto3" json:"folder_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveFolderRequest) Reset() {
	*x = MoveFolderRequest{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveFolderRequest) ProtoMessage() {}

func (x *MoveFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveFolderRequest.ProtoReflect.Descriptor instead.
func (*MoveFolderRequest) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{17}
}

func (x *MoveFolderRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MoveFolderRequest) GetFolderId() int64 {
	if x != nil {
		return x.FolderId
	}
	return 0
}

func (x *MoveFolderRequest) GetToFolderId() int64 {
	if x != nil {
		return x.ToFolderId
	}
	return 0
}

func (x *MoveFolderRequest) GetFolderName() string {
	if x != nil {
		return x.FolderName
	}
	return ""
}

type MoveFolderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveFolderResponse) Reset() {
	*x = MoveFolderResponse{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveFolderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveFolderResponse) ProtoMessage() {}

func (x *MoveFolderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveFolderResponse.ProtoReflect.Descriptor instead.
func (*MoveFolderResponse) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{18}
}

type MoveFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FileId        int64                  `protobuf:"varint,2,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	ToFolderId    int64                  `protobuf:"varint,4,opt,name=to_folder_id,json=toFolderId,proto3" json:"to_folder_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveFileRequest) Reset() {
	*x = MoveFileRequest{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveFileRequest) ProtoMessage() {}

func (x *MoveFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveFileRequest.ProtoReflect.Descriptor instead.
func (*MoveFileRequest) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{19}
}

func (x *MoveFileRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MoveFileRequest) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *MoveFileRequest) GetToFolderId() int64 {
	if x != nil {
		return x.ToFolderId
	}
	return 0
}

type MoveFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveFileResponse) Reset() {
	*x = MoveFileResponse{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveFileResponse) ProtoMessage() {}

func (x *MoveFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveFileResponse.ProtoReflect.Descriptor instead.
func (*MoveFileResponse) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{20}
}

type DeleteFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        int64                  `protobuf:"varint,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileRequest) Reset() {
	*x = DeleteFileRequest{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileRequest) ProtoMessage() {}

func (x *DeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteFileRequest) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *DeleteFileRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DeleteFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileResponse) Reset() {
	*x = DeleteFileResponse{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileResponse) ProtoMessage() {}

func (x *DeleteFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileResponse.ProtoReflect.Descriptor instead.
func (*DeleteFileResponse) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{22}
}

type DeleteFolderRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FolderId      int64                  `protobuf:"varint,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFolderRequest) Reset() {
	*x = DeleteFolderRequest{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFolderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFolderRequest) ProtoMessage() {}

func (x *DeleteFolderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFolderRequest.ProtoReflect.Descriptor instead.
func (*DeleteFolderRequest) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{23}
}

func (x *DeleteFolderRequest) GetFolderId() int64 {
	if x != nil {
		return x.FolderId
	}
	return 0
}

func (x *DeleteFolderRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DeleteFolderResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFolderResponse) Reset() {
	*x = DeleteFolderResponse{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFolderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFolderResponse) ProtoMessage() {}

func (x *DeleteFolderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFolderResponse.ProtoReflect.Descriptor instead.
func (*DeleteFolderResponse) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{24}
}

type SearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Query         string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Size          int32                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{25}
}

func (x *SearchRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type SearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*File                `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	Folders       []*Folder              `protobuf:"bytes,2,rep,name=folders,proto3" json:"folders,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{26}
}

func (x *SearchResponse) GetFiles() []*File {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *SearchResponse) GetFolders() []*Folder {
	if x != nil {
		return x.Folders
	}
	return nil
}

type PreviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        int64                  `protobuf:"varint,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreviewRequest) Reset() {
	*x = PreviewRequest{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewRequest) ProtoMessage() {}

func (x *PreviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewRequest.ProtoReflect.Descriptor instead.
func (*PreviewRequest) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{27}
}

func (x *PreviewRequest) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *PreviewRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type PreviewResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PreviewUrl    string                 `protobuf:"bytes,1,opt,name=preview_url,json=previewUrl,proto3" json:"preview_url,omitempty"`
	ContentType   string                 `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Type          PreviewType            `protobuf:"varint,3,opt,name=type,proto3,enum=file.PreviewType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PreviewResponse) Reset() {
	*x = PreviewResponse{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PreviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewResponse) ProtoMessage() {}

func (x *PreviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewResponse.ProtoReflect.Descriptor instead.
func (*PreviewResponse) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{28}
}

func (x *PreviewResponse) GetPreviewUrl() string {
	if x != nil {
		return x.PreviewUrl
	}
	return ""
}

func (x *PreviewResponse) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *PreviewResponse) GetType() PreviewType {
	if x != nil {
		return x.Type
	}
	return PreviewType_UNKNOWN
}

type PartInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PartNumber    int32                  `protobuf:"varint,1,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"`
	Etag          string                 `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PartInfo) Reset() {
	*x = PartInfo{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PartInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartInfo) ProtoMessage() {}

func (x *PartInfo) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartInfo.ProtoReflect.Descriptor instead.
func (*PartInfo) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{29}
}

func (x *PartInfo) GetPartNumber() int32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *PartInfo) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

type DownloadTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Files         []*FileDownloadInfo    `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	FolderName    string                 `protobuf:"bytes,3,opt,name=folder_name,json=folderName,proto3" json:"folder_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadTaskRequest) Reset() {
	*x = DownloadTaskRequest{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadTaskRequest) ProtoMessage() {}

func (x *DownloadTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadTaskRequest.ProtoReflect.Descriptor instead.
func (*DownloadTaskRequest) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{30}
}

func (x *DownloadTaskRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DownloadTaskRequest) GetFiles() []*FileDownloadInfo {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *DownloadTaskRequest) GetFolderName() string {
	if x != nil {
		return x.FolderName
	}
	return ""
}

type FileDownloadInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        int64                  `protobuf:"varint,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	OrderNum      int32                  `protobuf:"varint,2,opt,name=order_num,json=orderNum,proto3" json:"order_num,omitempty"`
	Path          string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileDownloadInfo) Reset() {
	*x = FileDownloadInfo{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDownloadInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadInfo) ProtoMessage() {}

func (x *FileDownloadInfo) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadInfo.ProtoReflect.Descriptor instead.
func (*FileDownloadInfo) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{31}
}

func (x *FileDownloadInfo) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *FileDownloadInfo) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *FileDownloadInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type DownloadTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadTaskResponse) Reset() {
	*x = DownloadTaskResponse{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadTaskResponse) ProtoMessage() {}

func (x *DownloadTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadTaskResponse.ProtoReflect.Descriptor instead.
func (*DownloadTaskResponse) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{32}
}

func (x *DownloadTaskResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type GetDownloadTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDownloadTaskRequest) Reset() {
	*x = GetDownloadTaskRequest{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDownloadTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDownloadTaskRequest) ProtoMessage() {}

func (x *GetDownloadTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDownloadTaskRequest.ProtoReflect.Descriptor instead.
func (*GetDownloadTaskRequest) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{33}
}

func (x *GetDownloadTaskRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *GetDownloadTaskRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetDownloadTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // pending processing completed failed
	FolderName    string                 `protobuf:"bytes,3,opt,name=folder_name,json=folderName,proto3" json:"folder_name,omitempty"`
	TotalSize     int64                  `protobuf:"varint,4,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	Progress      int64                  `protobuf:"varint,5,opt,name=progress,proto3" json:"progress,omitempty"`
	Files         []*FileProgress        `protobuf:"bytes,6,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDownloadTaskResponse) Reset() {
	*x = GetDownloadTaskResponse{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDownloadTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDownloadTaskResponse) ProtoMessage() {}

func (x *GetDownloadTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDownloadTaskResponse.ProtoReflect.Descriptor instead.
func (*GetDownloadTaskResponse) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{34}
}

func (x *GetDownloadTaskResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *GetDownloadTaskResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GetDownloadTaskResponse) GetFolderName() string {
	if x != nil {
		return x.FolderName
	}
	return ""
}

func (x *GetDownloadTaskResponse) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *GetDownloadTaskResponse) GetProgress() int64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *GetDownloadTaskResponse) GetFiles() []*FileProgress {
	if x != nil {
		return x.Files
	}
	return nil
}

type FileProgress struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        int64                  `protobuf:"varint,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Path          string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Size          int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	Status        string                 `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`          // pending processing completed failed
	Downloaded    int64                  `protobuf:"varint,6,opt,name=downloaded,proto3" json:"downloaded,omitempty"` // 已下载大小
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileProgress) Reset() {
	*x = FileProgress{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileProgress) ProtoMessage() {}

func (x *FileProgress) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileProgress.ProtoReflect.Descriptor instead.
func (*FileProgress) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{35}
}

func (x *FileProgress) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *FileProgress) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileProgress) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileProgress) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileProgress) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FileProgress) GetDownloaded() int64 {
	if x != nil {
		return x.Downloaded
	}
	return 0
}

type ResumeDownloadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`            // 原任务ID
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`           // 用户ID
	FileIds       []int64                `protobuf:"varint,3,rep,packed,name=file_ids,json=fileIds,proto3" json:"file_ids,omitempty"` // 需要继续下载的文件ID列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResumeDownloadRequest) Reset() {
	*x = ResumeDownloadRequest{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResumeDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeDownloadRequest) ProtoMessage() {}

func (x *ResumeDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeDownloadRequest.ProtoReflect.Descriptor instead.
func (*ResumeDownloadRequest) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{36}
}

func (x *ResumeDownloadRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ResumeDownloadRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ResumeDownloadRequest) GetFileIds() []int64 {
	if x != nil {
		return x.FileIds
	}
	return nil
}

type ResumeDownloadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewTaskId     string                 `protobuf:"bytes,1,opt,name=new_task_id,json=newTaskId,proto3" json:"new_task_id,omitempty"` // 新的任务ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResumeDownloadResponse) Reset() {
	*x = ResumeDownloadResponse{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResumeDownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResumeDownloadResponse) ProtoMessage() {}

func (x *ResumeDownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResumeDownloadResponse.ProtoReflect.Descriptor instead.
func (*ResumeDownloadResponse) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{37}
}

func (x *ResumeDownloadResponse) GetNewTaskId() string {
	if x != nil {
		return x.NewTaskId
	}
	return ""
}

type UploadChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	UploadId      string                 `protobuf:"bytes,2,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"`
	PartNumber    int32                  `protobuf:"varint,3,opt,name=part_number,json=partNumber,proto3" json:"part_number,omitempty"`
	Data          []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	FileSize      int64                  `protobuf:"varint,5,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	UserId        int32                  `protobuf:"varint,6,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	FolderId      int64                  `protobuf:"varint,7,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	IsLast        bool                   `protobuf:"varint,8,opt,name=is_last,json=isLast,proto3" json:"is_last,omitempty"` // 是否是最后一个分片
	Parts         []*PartInfo            `protobuf:"bytes,9,rep,name=parts,proto3" json:"parts,omitempty"`                  // 如果是最后一个分片，提供所有分片信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadChunkRequest) Reset() {
	*x = UploadChunkRequest{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadChunkRequest) ProtoMessage() {}

func (x *UploadChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadChunkRequest.ProtoReflect.Descriptor instead.
func (*UploadChunkRequest) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{38}
}

func (x *UploadChunkRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UploadChunkRequest) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *UploadChunkRequest) GetPartNumber() int32 {
	if x != nil {
		return x.PartNumber
	}
	return 0
}

func (x *UploadChunkRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UploadChunkRequest) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *UploadChunkRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UploadChunkRequest) GetFolderId() int64 {
	if x != nil {
		return x.FolderId
	}
	return 0
}

func (x *UploadChunkRequest) GetIsLast() bool {
	if x != nil {
		return x.IsLast
	}
	return false
}

func (x *UploadChunkRequest) GetParts() []*PartInfo {
	if x != nil {
		return x.Parts
	}
	return nil
}

type UploadChunkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UploadId      string                 `protobuf:"bytes,1,opt,name=upload_id,json=uploadId,proto3" json:"upload_id,omitempty"` // 如果是第一个分片，返回新的upload_id
	Etag          string                 `protobuf:"bytes,2,opt,name=etag,proto3" json:"etag,omitempty"`                         // 分片的ETag
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadChunkResponse) Reset() {
	*x = UploadChunkResponse{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadChunkResponse) ProtoMessage() {}

func (x *UploadChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadChunkResponse.ProtoReflect.Descriptor instead.
func (*UploadChunkResponse) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{39}
}

func (x *UploadChunkResponse) GetUploadId() string {
	if x != nil {
		return x.UploadId
	}
	return ""
}

func (x *UploadChunkResponse) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

type CreateShareLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`             // 分享者ID
	FileIds       []int64                `protobuf:"varint,2,rep,packed,name=file_ids,json=fileIds,proto3" json:"file_ids,omitempty"`   // 要分享的文件ID列表
	FolderId      int64                  `protobuf:"varint,3,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`       // 要分享的文件夹ID，与file_ids二选一
	ExpireDays    int32                  `protobuf:"varint,4,opt,name=expire_days,json=expireDays,proto3" json:"expire_days,omitempty"` // 链接有效期(天)
	Password      string                 `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`                        // 可选的提取密码
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateShareLinkRequest) Reset() {
	*x = CreateShareLinkRequest{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateShareLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShareLinkRequest) ProtoMessage() {}

func (x *CreateShareLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShareLinkRequest.ProtoReflect.Descriptor instead.
func (*CreateShareLinkRequest) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{40}
}

func (x *CreateShareLinkRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateShareLinkRequest) GetFileIds() []int64 {
	if x != nil {
		return x.FileIds
	}
	return nil
}

func (x *CreateShareLinkRequest) GetFolderId() int64 {
	if x != nil {
		return x.FolderId
	}
	return 0
}

func (x *CreateShareLinkRequest) GetExpireDays() int32 {
	if x != nil {
		return x.ExpireDays
	}
	return 0
}

func (x *CreateShareLinkRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type CreateShareLinkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShareId       string                 `protobuf:"bytes,1,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`     // 分享ID
	ShareUrl      string                 `protobuf:"bytes,2,opt,name=share_url,json=shareUrl,proto3" json:"share_url,omitempty"`  // 分享链接
	Password      string                 `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`                  // 提取密码
	ExpireAt      int64                  `protobuf:"varint,4,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"` // 过期时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateShareLinkResponse) Reset() {
	*x = CreateShareLinkResponse{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateShareLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShareLinkResponse) ProtoMessage() {}

func (x *CreateShareLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShareLinkResponse.ProtoReflect.Descriptor instead.
func (*CreateShareLinkResponse) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{41}
}

func (x *CreateShareLinkResponse) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

func (x *CreateShareLinkResponse) GetShareUrl() string {
	if x != nil {
		return x.ShareUrl
	}
	return ""
}

func (x *CreateShareLinkResponse) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateShareLinkResponse) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

type SaveToMyDriveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShareId       string                 `protobuf:"bytes,1,opt,name=share_id,json=shareId,proto3" json:"share_id,omitempty"`             // 分享ID
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`                          // 提取密码
	UserId        int32                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`               // 保存者的用户ID
	ToFolderId    int64                  `protobuf:"varint,4,opt,name=to_folder_id,json=toFolderId,proto3" json:"to_folder_id,omitempty"` // 保存到的目标文件夹ID
	FileIds       []int64                `protobuf:"varint,5,rep,packed,name=file_ids,json=fileIds,proto3" json:"file_ids,omitempty"`     // 选择保存的文件ID列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveToMyDriveRequest) Reset() {
	*x = SaveToMyDriveRequest{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveToMyDriveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveToMyDriveRequest) ProtoMessage() {}

func (x *SaveToMyDriveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveToMyDriveRequest.ProtoReflect.Descriptor instead.
func (*SaveToMyDriveRequest) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{42}
}

func (x *SaveToMyDriveRequest) GetShareId() string {
	if x != nil {
		return x.ShareId
	}
	return ""
}

func (x *SaveToMyDriveRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SaveToMyDriveRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SaveToMyDriveRequest) GetToFolderId() int64 {
	if x != nil {
		return x.ToFolderId
	}
	return 0
}

func (x *SaveToMyDriveRequest) GetFileIds() []int64 {
	if x != nil {
		return x.FileIds
	}
	return nil
}

type SaveToMyDriveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveToMyDriveResponse) Reset() {
	*x = SaveToMyDriveResponse{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveToMyDriveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveToMyDriveResponse) ProtoMessage() {}

func (x *SaveToMyDriveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveToMyDriveResponse.ProtoReflect.Descriptor instead.
func (*SaveToMyDriveResponse) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{43}
}

type GetUserFileStoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserFileStoreRequest) Reset() {
	*x = GetUserFileStoreRequest{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserFileStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserFileStoreRequest) ProtoMessage() {}

func (x *GetUserFileStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserFileStoreRequest.ProtoReflect.Descriptor instead.
func (*GetUserFileStoreRequest) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{44}
}

func (x *GetUserFileStoreRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserFileStoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileStore     *FileStore             `protobuf:"bytes,1,opt,name=file_store,json=fileStore,proto3" json:"file_store,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserFileStoreResponse) Reset() {
	*x = GetUserFileStoreResponse{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserFileStoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserFileStoreResponse) ProtoMessage() {}

func (x *GetUserFileStoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserFileStoreResponse.ProtoReflect.Descriptor instead.
func (*GetUserFileStoreResponse) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{45}
}

func (x *GetUserFileStoreResponse) GetFileStore() *FileStore {
	if x != nil {
		return x.FileStore
	}
	return nil
}

type UpdateFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        int64                  `protobuf:"varint,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	UserId        int32                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Data          []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"` // 完整文件内容（用于全量更新，与changes字段二选一）
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	DeviceId      string                 `protobuf:"bytes,5,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`                 // 设备ID
	BaseVersion   int64                  `protobuf:"varint,6,opt,name=base_version,json=baseVersion,proto3" json:"base_version,omitempty"`       // 基础版本号，客户端基于哪个版本进行的修改
	Changes       []*FileChange          `protobuf:"bytes,7,rep,name=changes,proto3" json:"changes,omitempty"`                                   // 文件变更列表（用于增量更新，与data字段二选一）
	IsIncremental bool                   `protobuf:"varint,8,opt,name=is_incremental,json=isIncremental,proto3" json:"is_incremental,omitempty"` // 是否是增量更新
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateFileRequest) Reset() {
	*x = UpdateFileRequest{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFileRequest) ProtoMessage() {}

func (x *UpdateFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFileRequest.ProtoReflect.Descriptor instead.
func (*UpdateFileRequest) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{46}
}

func (x *UpdateFileRequest) GetFileId() int64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *UpdateFileRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateFileRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UpdateFileRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateFileRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *UpdateFileRequest) GetBaseVersion() int64 {
	if x != nil {
		return x.BaseVersion
	}
	return 0
}

func (x *UpdateFileRequest) GetChanges() []*FileChange {
	if x != nil {
		return x.Changes
	}
	return nil
}

func (x *UpdateFileRequest) GetIsIncremental() bool {
	if x != nil {
		return x.IsIncremental
	}
	return false
}

// 文件变更记录
type FileChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Operation     ChangeOperation        `protobuf:"varint,1,opt,name=operation,proto3,enum=file.ChangeOperation" json:"operation,omitempty"` // 操作类型
	Position      int64                  `protobuf:"varint,2,opt,name=position,proto3" json:"position,omitempty"`                             // 变更的起始位置（字节偏移量）
	Length        int64                  `protobuf:"varint,3,opt,name=length,proto3" json:"length,omitempty"`                                 // 原内容长度（用于Delete和Update操作）
	Content       []byte                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                                // 新内容（用于Insert和Update操作）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileChange) Reset() {
	*x = FileChange{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileChange) ProtoMessage() {}

func (x *FileChange) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileChange.ProtoReflect.Descriptor instead.
func (*FileChange) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{47}
}

func (x *FileChange) GetOperation() ChangeOperation {
	if x != nil {
		return x.Operation
	}
	return ChangeOperation_INSERT
}

func (x *FileChange) GetPosition() int64 {
	if x != nil {
		return x.Position
	}
	return 0
}

func (x *FileChange) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *FileChange) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

// 不修改 UpdateFileResponse
type UpdateFileResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	File            *File                  `protobuf:"bytes,1,opt,name=file,proto3" json:"file,omitempty"`
	HasConflict     bool                   `protobuf:"varint,2,opt,name=has_conflict,json=hasConflict,proto3" json:"has_conflict,omitempty"`            // 是否存在冲突
	ConflictMessage string                 `protobuf:"bytes,3,opt,name=conflict_message,json=conflictMessage,proto3" json:"conflict_message,omitempty"` // 冲突信息
	CurrentVersion  int64                  `protobuf:"varint,4,opt,name=current_version,json=currentVersion,proto3" json:"current_version,omitempty"`   // 当前最新版本号
	NeededChanges   []*FileChange          `protobuf:"bytes,5,rep,name=needed_changes,json=neededChanges,proto3" json:"needed_changes,omitempty"`       // 客户端需要应用的变更（冲突时提供）
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *UpdateFileResponse) Reset() {
	*x = UpdateFileResponse{}
	mi := &file_idl_cloudstorage_file_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFileResponse) ProtoMessage() {}

func (x *UpdateFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_idl_cloudstorage_file_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFileResponse.ProtoReflect.Descriptor instead.
func (*UpdateFileResponse) Descriptor() ([]byte, []int) {
	return file_idl_cloudstorage_file_proto_rawDescGZIP(), []int{48}
}

func (x *UpdateFileResponse) GetFile() *File {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *UpdateFileResponse) GetHasConflict() bool {
	if x != nil {
		return x.HasConflict
	}
	return false
}

func (x *UpdateFileResponse) GetConflictMessage() string {
	if x != nil {
		return x.ConflictMessage
	}
	return ""
}

func (x *UpdateFileResponse) GetCurrentVersion() int64 {
	if x != nil {
		return x.CurrentVersion
	}
	return 0
}

func (x *UpdateFileResponse) GetNeededChanges() []*FileChange {
	if x != nil {
		return x.NeededChanges
	}
	return nil
}

var File_idl_cloudstorage_file_proto protoreflect.FileDescriptor

const file_idl_cloudstorage_file_proto_rawDesc = "" +
	"\n" +
	"\x1bidl/cloudstorage/file.proto\x12\x04file\"\xb7\x01\n" +
	"\fFileMetaData\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\x12\x12\n" +
	"\x04hash\x18\x03 \x01(\tR\x04hash\x12\x12\n" +
	"\x04path\x18\x04 \x01(\tR\x04path\x12!\n" +
	"\fcontent_type\x18\x05 \x01(\tR\vcontentType\x12\x17\n" +
	"\auser_id\x18\x06 \x01(\x05R\x06userId\x12\x1b\n" +
	"\tfolder_id\x18\a \x01(\x03R\bfolderId\"\xff\x01\n" +
	"\x04File\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1b\n" +
	"\tfolder_id\x18\x03 \x01(\x03R\bfolderId\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\x05R\x06userId\x12\x12\n" +
	"\x04size\x18\x06 \x01(\x03R\x04size\x12\x12\n" +
	"\x04type\x18\a \x01(\tR\x04type\x12\x14\n" +
	"\x05utime\x18\b \x01(\tR\x05utime\x12\x18\n" +
	"\aversion\x18\t \x01(\x05R\aversion\x12\x1b\n" +
	"\tdevice_id\x18\n" +
	" \x01(\tR\bdeviceId\x12(\n" +
	"\x10last_modified_by\x18\v \x01(\tR\x0elastModifiedBy\"\x8c\x01\n" +
	"\x06Folder\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1b\n" +
	"\tparent_id\x18\x03 \x01(\x03R\bparentId\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\x05R\x06userId\x12\x12\n" +
	"\x04path\x18\x05 \x01(\tR\x04path\x12\x14\n" +
	"\x05utime\x18\x06 \x01(\tR\x05utime\"c\n" +
	"\tFileStore\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\x12\x1a\n" +
	"\bcapacity\x18\x02 \x01(\x03R\bcapacity\x12!\n" +
	"\fcurrent_size\x18\x03 \x01(\x03R\vcurrentSize\"S\n" +
	"\rUploadRequest\x12.\n" +
	"\bmetadata\x18\x01 \x01(\v2\x12.file.FileMetaDataR\bmetadata\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\" \n" +
	"\x0eUploadResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"1\n" +
	"\x16CreateFileStoreRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\")\n" +
	"\x17CreateFileStoreResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\"_\n" +
	"\x13CreateFolderRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1b\n" +
	"\tparent_id\x18\x02 \x01(\x03R\bparentId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x05R\x06userId\"<\n" +
	"\x14CreateFolderResponse\x12$\n" +
	"\x06folder\x18\x01 \x01(\v2\f.file.FolderR\x06folder\"I\n" +
	"\x11ListFolderRequest\x12\x1b\n" +
	"\tfolder_id\x18\x01 \x01(\x03R\bfolderId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x05R\x06userId\"^\n" +
	"\x12ListFolderResponse\x12&\n" +
	"\afolders\x18\x01 \x03(\v2\f.file.FolderR\afolders\x12 \n" +
	"\x05files\x18\x02 \x03(\v2\n" +
	".file.FileR\x05files\"B\n" +
	"\x0eGetFileRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\x03R\x06fileId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x05R\x06userId\"1\n" +
	"\x0fGetFileResponse\x12\x1e\n" +
	"\x04file\x18\x01 \x01(\v2\n" +
	".file.FileR\x04file\"C\n" +
	"\x0fDownloadRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\x03R\x06fileId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x05R\x06userId\"&\n" +
	"\x10DownloadResponse\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\",\n" +
	"\x16DownloadStreamResponse\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\"\x8c\x01\n" +
	"\x11MoveFolderRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\x12\x1b\n" +
	"\tfolder_id\x18\x02 \x01(\x03R\bfolderId\x12 \n" +
	"\fto_folder_id\x18\x03 \x01(\x03R\n" +
	"toFolderId\x12\x1f\n" +
	"\vfolder_name\x18\x04 \x01(\tR\n" +
	"folderName\"\x14\n" +
	"\x12MoveFolderResponse\"e\n" +
	"\x0fMoveFileRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\x12\x17\n" +
	"\afile_id\x18\x02 \x01(\x03R\x06fileId\x12 \n" +
	"\fto_folder_id\x18\x04 \x01(\x03R\n" +
	"toFolderId\"\x12\n" +
	"\x10MoveFileResponse\"E\n" +
	"\x11DeleteFileRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\x03R\x06fileId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x05R\x06userId\"\x14\n" +
	"\x12DeleteFileResponse\"K\n" +
	"\x13DeleteFolderRequest\x12\x1b\n" +
	"\tfolder_id\x18\x01 \x01(\x03R\bfolderId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x05R\x06userId\"\x16\n" +
	"\x14DeleteFolderResponse\"f\n" +
	"\rSearchRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x05R\x04size\"Z\n" +
	"\x0eSearchResponse\x12 \n" +
	"\x05files\x18\x01 \x03(\v2\n" +
	".file.FileR\x05files\x12&\n" +
	"\afolders\x18\x02 \x03(\v2\f.file.FolderR\afolders\"B\n" +
	"\x0ePreviewRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\x03R\x06fileId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x05R\x06userId\"|\n" +
	"\x0fPreviewResponse\x12\x1f\n" +
	"\vpreview_url\x18\x01 \x01(\tR\n" +
	"previewUrl\x12!\n" +
	"\fcontent_type\x18\x02 \x01(\tR\vcontentType\x12%\n" +
	"\x04type\x18\x03 \x01(\x0e2\x11.file.PreviewTypeR\x04type\"?\n" +
	"\bPartInfo\x12\x1f\n" +
	"\vpart_number\x18\x01 \x01(\x05R\n" +
	"partNumber\x12\x12\n" +
	"\x04etag\x18\x02 \x01(\tR\x04etag\"}\n" +
	"\x13DownloadTaskRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\x12,\n" +
	"\x05files\x18\x02 \x03(\v2\x16.file.FileDownloadInfoR\x05files\x12\x1f\n" +
	"\vfolder_name\x18\x03 \x01(\tR\n" +
	"folderName\"\\\n" +
	"\x10FileDownloadInfo\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\x03R\x06fileId\x12\x1b\n" +
	"\torder_num\x18\x02 \x01(\x05R\borderNum\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\"/\n" +
	"\x14DownloadTaskResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\"J\n" +
	"\x16GetDownloadTaskRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x05R\x06userId\"\xd0\x01\n" +
	"\x17GetDownloadTaskResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1f\n" +
	"\vfolder_name\x18\x03 \x01(\tR\n" +
	"folderName\x12\x1d\n" +
	"\n" +
	"total_size\x18\x04 \x01(\x03R\ttotalSize\x12\x1a\n" +
	"\bprogress\x18\x05 \x01(\x03R\bprogress\x12(\n" +
	"\x05files\x18\x06 \x03(\v2\x12.file.FileProgressR\x05files\"\x9b\x01\n" +
	"\fFileProgress\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\x03R\x06fileId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\x12\x16\n" +
	"\x06status\x18\x05 \x01(\tR\x06status\x12\x1e\n" +
	"\n" +
	"downloaded\x18\x06 \x01(\x03R\n" +
	"downloaded\"d\n" +
	"\x15ResumeDownloadRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x05R\x06userId\x12\x19\n" +
	"\bfile_ids\x18\x03 \x03(\x03R\afileIds\"8\n" +
	"\x16ResumeDownloadResponse\x12\x1e\n" +
	"\vnew_task_id\x18\x01 \x01(\tR\tnewTaskId\"\x94\x02\n" +
	"\x12UploadChunkRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x1b\n" +
	"\tupload_id\x18\x02 \x01(\tR\buploadId\x12\x1f\n" +
	"\vpart_number\x18\x03 \x01(\x05R\n" +
	"partNumber\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\x12\x1b\n" +
	"\tfile_size\x18\x05 \x01(\x03R\bfileSize\x12\x17\n" +
	"\auser_id\x18\x06 \x01(\x05R\x06userId\x12\x1b\n" +
	"\tfolder_id\x18\a \x01(\x03R\bfolderId\x12\x17\n" +
	"\ais_last\x18\b \x01(\bR\x06isLast\x12$\n" +
	"\x05parts\x18\t \x03(\v2\x0e.file.PartInfoR\x05parts\"F\n" +
	"\x13UploadChunkResponse\x12\x1b\n" +
	"\tupload_id\x18\x01 \x01(\tR\buploadId\x12\x12\n" +
	"\x04etag\x18\x02 \x01(\tR\x04etag\"\xa6\x01\n" +
	"\x16CreateShareLinkRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\x12\x19\n" +
	"\bfile_ids\x18\x02 \x03(\x03R\afileIds\x12\x1b\n" +
	"\tfolder_id\x18\x03 \x01(\x03R\bfolderId\x12\x1f\n" +
	"\vexpire_days\x18\x04 \x01(\x05R\n" +
	"expireDays\x12\x1a\n" +
	"\bpassword\x18\x05 \x01(\tR\bpassword\"\x8a\x01\n" +
	"\x17CreateShareLinkResponse\x12\x19\n" +
	"\bshare_id\x18\x01 \x01(\tR\ashareId\x12\x1b\n" +
	"\tshare_url\x18\x02 \x01(\tR\bshareUrl\x12\x1a\n" +
	"\bpassword\x18\x03 \x01(\tR\bpassword\x12\x1b\n" +
	"\texpire_at\x18\x04 \x01(\x03R\bexpireAt\"\xa3\x01\n" +
	"\x14SaveToMyDriveRequest\x12\x19\n" +
	"\bshare_id\x18\x01 \x01(\tR\ashareId\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x05R\x06userId\x12 \n" +
	"\fto_folder_id\x18\x04 \x01(\x03R\n" +
	"toFolderId\x12\x19\n" +
	"\bfile_ids\x18\x05 \x03(\x03R\afileIds\"\x17\n" +
	"\x15SaveToMyDriveResponse\"2\n" +
	"\x17GetUserFileStoreRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\"J\n" +
	"\x18GetUserFileStoreResponse\x12.\n" +
	"\n" +
	"file_store\x18\x01 \x01(\v2\x0f.file.FileStoreR\tfileStore\"\x80\x02\n" +
	"\x11UpdateFileRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\x03R\x06fileId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x05R\x06userId\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x1b\n" +
	"\tdevice_id\x18\x05 \x01(\tR\bdeviceId\x12!\n" +
	"\fbase_version\x18\x06 \x01(\x03R\vbaseVersion\x12*\n" +
	"\achanges\x18\a \x03(\v2\x10.file.FileChangeR\achanges\x12%\n" +
	"\x0eis_incremental\x18\b \x01(\bR\risIncremental\"\x8f\x01\n" +
	"\n" +
	"FileChange\x123\n" +
	"\toperation\x18\x01 \x01(\x0e2\x15.file.ChangeOperationR\toperation\x12\x1a\n" +
	"\bposition\x18\x02 \x01(\x03R\bposition\x12\x16\n" +
	"\x06length\x18\x03 \x01(\x03R\x06length\x12\x18\n" +
	"\acontent\x18\x04 \x01(\fR\acontent\"\xe4\x01\n" +
	"\x12UpdateFileResponse\x12\x1e\n" +
	"\x04file\x18\x01 \x01(\v2\n" +
	".file.FileR\x04file\x12!\n" +
	"\fhas_conflict\x18\x02 \x01(\bR\vhasConflict\x12)\n" +
	"\x10conflict_message\x18\x03 \x01(\tR\x0fconflictMessage\x12'\n" +
	"\x0fcurrent_version\x18\x04 \x01(\x03R\x0ecurrentVersion\x127\n" +
	"\x0eneeded_changes\x18\x05 \x03(\v2\x10.file.FileChangeR\rneededChanges*F\n" +
	"\vPreviewType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\t\n" +
	"\x05IMAGE\x10\x01\x12\a\n" +
	"\x03PDF\x10\x02\x12\f\n" +
	"\bDOCUMENT\x10\x03\x12\b\n" +
	"\x04TEXT\x10\x04*5\n" +
	"\x0fChangeOperation\x12\n" +
	"\n" +
	"\x06INSERT\x10\x00\x12\n" +
	"\n" +
	"\x06DELETE\x10\x01\x12\n" +
	"\n" +
	"\x06UPDATE\x10\x022\xa7\v\n" +
	"\vFileService\x123\n" +
	"\x06Upload\x12\x13.file.UploadRequest\x1a\x14.file.UploadResponse\x12N\n" +
	"\x0fCreateFileStore\x12\x1c.file.CreateFileStoreRequest\x1a\x1d.file.CreateFileStoreResponse\x12E\n" +
	"\fCreateFolder\x12\x19.file.CreateFolderRequest\x1a\x1a.file.CreateFolderResponse\x12?\n" +
	"\n" +
	"ListFolder\x12\x17.file.ListFolderRequest\x1a\x18.file.ListFolderResponse\x126\n" +
	"\aGetFile\x12\x14.file.GetFileRequest\x1a\x15.file.GetFileResponse\x129\n" +
	"\bDownload\x12\x15.file.DownloadRequest\x1a\x16.file.DownloadResponse\x12G\n" +
	"\x0eDownloadStream\x12\x15.file.DownloadRequest\x1a\x1c.file.DownloadStreamResponse0\x01\x12?\n" +
	"\n" +
	"MoveFolder\x12\x17.file.MoveFolderRequest\x1a\x18.file.MoveFolderResponse\x129\n" +
	"\bMoveFile\x12\x15.file.MoveFileRequest\x1a\x16.file.MoveFileResponse\x12?\n" +
	"\n" +
	"DeleteFile\x12\x17.file.DeleteFileRequest\x1a\x18.file.DeleteFileResponse\x12E\n" +
	"\fDeleteFolder\x12\x19.file.DeleteFolderRequest\x1a\x1a.file.DeleteFolderResponse\x123\n" +
	"\x06Search\x12\x13.file.SearchRequest\x1a\x14.file.SearchResponse\x126\n" +
	"\aPreview\x12\x14.file.PreviewRequest\x1a\x15.file.PreviewResponse\x12E\n" +
	"\fDownloadTask\x12\x19.file.DownloadTaskRequest\x1a\x1a.file.DownloadTaskResponse\x12N\n" +
	"\x0fGetDownloadTask\x12\x1c.file.GetDownloadTaskRequest\x1a\x1d.file.GetDownloadTaskResponse\x12K\n" +
	"\x0eResumeDownload\x12\x1b.file.ResumeDownloadRequest\x1a\x1c.file.ResumeDownloadResponse\x12L\n" +
	"\x11UploadChunkStream\x12\x18.file.UploadChunkRequest\x1a\x19.file.UploadChunkResponse\"\x00(\x01\x12N\n" +
	"\x0fCreateShareLink\x12\x1c.file.CreateShareLinkRequest\x1a\x1d.file.CreateShareLinkResponse\x12H\n" +
	"\rSaveToMyDrive\x12\x1a.file.SaveToMyDriveRequest\x1a\x1b.file.SaveToMyDriveResponse\x12Q\n" +
	"\x10GetUserFileStore\x12\x1d.file.GetUserFileStoreRequest\x1a\x1e.file.GetUserFileStoreResponse\x12?\n" +
	"\n" +
	"UpdateFile\x12\x17.file.UpdateFileRequest\x1a\x18.file.UpdateFileResponseB\aZ\x05/fileb\x06proto3"

var (
	file_idl_cloudstorage_file_proto_rawDescOnce sync.Once
	file_idl_cloudstorage_file_proto_rawDescData []byte
)

func file_idl_cloudstorage_file_proto_rawDescGZIP() []byte {
	file_idl_cloudstorage_file_proto_rawDescOnce.Do(func() {
		file_idl_cloudstorage_file_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_idl_cloudstorage_file_proto_rawDesc), len(file_idl_cloudstorage_file_proto_rawDesc)))
	})
	return file_idl_cloudstorage_file_proto_rawDescData
}

var file_idl_cloudstorage_file_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_idl_cloudstorage_file_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_idl_cloudstorage_file_proto_goTypes = []any{
	(PreviewType)(0),                 // 0: file.PreviewType
	(ChangeOperation)(0),             // 1: file.ChangeOperation
	(*FileMetaData)(nil),             // 2: file.FileMetaData
	(*File)(nil),                     // 3: file.File
	(*Folder)(nil),                   // 4: file.Folder
	(*FileStore)(nil),                // 5: file.FileStore
	(*UploadRequest)(nil),            // 6: file.UploadRequest
	(*UploadResponse)(nil),           // 7: file.UploadResponse
	(*CreateFileStoreRequest)(nil),   // 8: file.CreateFileStoreRequest
	(*CreateFileStoreResponse)(nil),  // 9: file.CreateFileStoreResponse
	(*CreateFolderRequest)(nil),      // 10: file.CreateFolderRequest
	(*CreateFolderResponse)(nil),     // 11: file.CreateFolderResponse
	(*ListFolderRequest)(nil),        // 12: file.ListFolderRequest
	(*ListFolderResponse)(nil),       // 13: file.ListFolderResponse
	(*GetFileRequest)(nil),           // 14: file.GetFileRequest
	(*GetFileResponse)(nil),          // 15: file.GetFileResponse
	(*DownloadRequest)(nil),          // 16: file.DownloadRequest
	(*DownloadResponse)(nil),         // 17: file.DownloadResponse
	(*DownloadStreamResponse)(nil),   // 18: file.DownloadStreamResponse
	(*MoveFolderRequest)(nil),        // 19: file.MoveFolderRequest
	(*MoveFolderResponse)(nil),       // 20: file.MoveFolderResponse
	(*MoveFileRequest)(nil),          // 21: file.MoveFileRequest
	(*MoveFileResponse)(nil),         // 22: file.MoveFileResponse
	(*DeleteFileRequest)(nil),        // 23: file.DeleteFileRequest
	(*DeleteFileResponse)(nil),       // 24: file.DeleteFileResponse
	(*DeleteFolderRequest)(nil),      // 25: file.DeleteFolderRequest
	(*DeleteFolderResponse)(nil),     // 26: file.DeleteFolderResponse
	(*SearchRequest)(nil),            // 27: file.SearchRequest
	(*SearchResponse)(nil),           // 28: file.SearchResponse
	(*PreviewRequest)(nil),           // 29: file.PreviewRequest
	(*PreviewResponse)(nil),          // 30: file.PreviewResponse
	(*PartInfo)(nil),                 // 31: file.PartInfo
	(*DownloadTaskRequest)(nil),      // 32: file.DownloadTaskRequest
	(*FileDownloadInfo)(nil),         // 33: file.FileDownloadInfo
	(*DownloadTaskResponse)(nil),     // 34: file.DownloadTaskResponse
	(*GetDownloadTaskRequest)(nil),   // 35: file.GetDownloadTaskRequest
	(*GetDownloadTaskResponse)(nil),  // 36: file.GetDownloadTaskResponse
	(*FileProgress)(nil),             // 37: file.FileProgress
	(*ResumeDownloadRequest)(nil),    // 38: file.ResumeDownloadRequest
	(*ResumeDownloadResponse)(nil),   // 39: file.ResumeDownloadResponse
	(*UploadChunkRequest)(nil),       // 40: file.UploadChunkRequest
	(*UploadChunkResponse)(nil),      // 41: file.UploadChunkResponse
	(*CreateShareLinkRequest)(nil),   // 42: file.CreateShareLinkRequest
	(*CreateShareLinkResponse)(nil),  // 43: file.CreateShareLinkResponse
	(*SaveToMyDriveRequest)(nil),     // 44: file.SaveToMyDriveRequest
	(*SaveToMyDriveResponse)(nil),    // 45: file.SaveToMyDriveResponse
	(*GetUserFileStoreRequest)(nil),  // 46: file.GetUserFileStoreRequest
	(*GetUserFileStoreResponse)(nil), // 47: file.GetUserFileStoreResponse
	(*UpdateFileRequest)(nil),        // 48: file.UpdateFileRequest
	(*FileChange)(nil),               // 49: file.FileChange
	(*UpdateFileResponse)(nil),       // 50: file.UpdateFileResponse
}
var file_idl_cloudstorage_file_proto_depIdxs = []int32{
	2,  // 0: file.UploadRequest.metadata:type_name -> file.FileMetaData
	4,  // 1: file.CreateFolderResponse.folder:type_name -> file.Folder
	4,  // 2: file.ListFolderResponse.folders:type_name -> file.Folder
	3,  // 3: file.ListFolderResponse.files:type_name -> file.File
	3,  // 4: file.GetFileResponse.file:type_name -> file.File
	3,  // 5: file.SearchResponse.files:type_name -> file.File
	4,  // 6: file.SearchResponse.folders:type_name -> file.Folder
	0,  // 7: file.PreviewResponse.type:type_name -> file.PreviewType
	33, // 8: file.DownloadTaskRequest.files:type_name -> file.FileDownloadInfo
	37, // 9: file.GetDownloadTaskResponse.files:type_name -> file.FileProgress
	31, // 10: file.UploadChunkRequest.parts:type_name -> file.PartInfo
	5,  // 11: file.GetUserFileStoreResponse.file_store:type_name -> file.FileStore
	49, // 12: file.UpdateFileRequest.changes:type_name -> file.FileChange
	1,  // 13: file.FileChange.operation:type_name -> file.ChangeOperation
	3,  // 14: file.UpdateFileResponse.file:type_name -> file.File
	49, // 15: file.UpdateFileResponse.needed_changes:type_name -> file.FileChange
	6,  // 16: file.FileService.Upload:input_type -> file.UploadRequest
	8,  // 17: file.FileService.CreateFileStore:input_type -> file.CreateFileStoreRequest
	10, // 18: file.FileService.CreateFolder:input_type -> file.CreateFolderRequest
	12, // 19: file.FileService.ListFolder:input_type -> file.ListFolderRequest
	14, // 20: file.FileService.GetFile:input_type -> file.GetFileRequest
	16, // 21: file.FileService.Download:input_type -> file.DownloadRequest
	16, // 22: file.FileService.DownloadStream:input_type -> file.DownloadRequest
	19, // 23: file.FileService.MoveFolder:input_type -> file.MoveFolderRequest
	21, // 24: file.FileService.MoveFile:input_type -> file.MoveFileRequest
	23, // 25: file.FileService.DeleteFile:input_type -> file.DeleteFileRequest
	25, // 26: file.FileService.DeleteFolder:input_type -> file.DeleteFolderRequest
	27, // 27: file.FileService.Search:input_type -> file.SearchRequest
	29, // 28: file.FileService.Preview:input_type -> file.PreviewRequest
	32, // 29: file.FileService.DownloadTask:input_type -> file.DownloadTaskRequest
	35, // 30: file.FileService.GetDownloadTask:input_type -> file.GetDownloadTaskRequest
	38, // 31: file.FileService.ResumeDownload:input_type -> file.ResumeDownloadRequest
	40, // 32: file.FileService.UploadChunkStream:input_type -> file.UploadChunkRequest
	42, // 33: file.FileService.CreateShareLink:input_type -> file.CreateShareLinkRequest
	44, // 34: file.FileService.SaveToMyDrive:input_type -> file.SaveToMyDriveRequest
	46, // 35: file.FileService.GetUserFileStore:input_type -> file.GetUserFileStoreRequest
	48, // 36: file.FileService.UpdateFile:input_type -> file.UpdateFileRequest
	7,  // 37: file.FileService.Upload:output_type -> file.UploadResponse
	9,  // 38: file.FileService.CreateFileStore:output_type -> file.CreateFileStoreResponse
	11, // 39: file.FileService.CreateFolder:output_type -> file.CreateFolderResponse
	13, // 40: file.FileService.ListFolder:output_type -> file.ListFolderResponse
	15, // 41: file.FileService.GetFile:output_type -> file.GetFileResponse
	17, // 42: file.FileService.Download:output_type -> file.DownloadResponse
	18, // 43: file.FileService.DownloadStream:output_type -> file.DownloadStreamResponse
	20, // 44: file.FileService.MoveFolder:output_type -> file.MoveFolderResponse
	22, // 45: file.FileService.MoveFile:output_type -> file.MoveFileResponse
	24, // 46: file.FileService.DeleteFile:output_type -> file.DeleteFileResponse
	26, // 47: file.FileService.DeleteFolder:output_type -> file.DeleteFolderResponse
	28, // 48: file.FileService.Search:output_type -> file.SearchResponse
	30, // 49: file.FileService.Preview:output_type -> file.PreviewResponse
	34, // 50: file.FileService.DownloadTask:output_type -> file.DownloadTaskResponse
	36, // 51: file.FileService.GetDownloadTask:output_type -> file.GetDownloadTaskResponse
	39, // 52: file.FileService.ResumeDownload:output_type -> file.ResumeDownloadResponse
	41, // 53: file.FileService.UploadChunkStream:output_type -> file.UploadChunkResponse
	43, // 54: file.FileService.CreateShareLink:output_type -> file.CreateShareLinkResponse
	45, // 55: file.FileService.SaveToMyDrive:output_type -> file.SaveToMyDriveResponse
	47, // 56: file.FileService.GetUserFileStore:output_type -> file.GetUserFileStoreResponse
	50, // 57: file.FileService.UpdateFile:output_type -> file.UpdateFileResponse
	37, // [37:58] is the sub-list for method output_type
	16, // [16:37] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_idl_cloudstorage_file_proto_init() }
func file_idl_cloudstorage_file_proto_init() {
	if File_idl_cloudstorage_file_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_idl_cloudstorage_file_proto_rawDesc), len(file_idl_cloudstorage_file_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_idl_cloudstorage_file_proto_goTypes,
		DependencyIndexes: file_idl_cloudstorage_file_proto_depIdxs,
		EnumInfos:         file_idl_cloudstorage_file_proto_enumTypes,
		MessageInfos:      file_idl_cloudstorage_file_proto_msgTypes,
	}.Build()
	File_idl_cloudstorage_file_proto = out.File
	file_idl_cloudstorage_file_proto_goTypes = nil
	file_idl_cloudstorage_file_proto_depIdxs = nil
}
